import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class MatrixOperations {
    public static void main(String[] args) {
        int[][] matrix = readMatrixFromFile("data.txt");

        if (matrix != null) {
            System.out.println("Оригиналната матрица:");
            printMatrix(matrix);

            if (productOfMainDiagonal(matrix) * 3 < productOfSecondaryDiagonal(matrix)) {
                transposeMatrix(matrix);

                System.out.println("\nТранспонираната матрица:");
                printMatrix(matrix);

                writeMatrixToFile(matrix, System.getProperty("user.home") + "/Desktop/output2.txt");
                System.out.println("\nТранспонираната матрица е запишана во датотеката: output2.txt");
            } else {
                writeMatrixToFile(matrix, System.getProperty("user.home") + "/Desktop/output2.txt");
                System.out.println("\nОригиналната матрица е запишана во датотеката: output2.txt");
            }
        }
    }

    private static int[][] readMatrixFromFile(String filename) {
        int[][] matrix = new int[5][5];

        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            for (int i = 0; i < 5; i++) {
                String[] rowValues = reader.readLine().split(" ");
                for (int j = 0; j < 5; j++) {
                    matrix[i][j] = Integer.parseInt(rowValues[j]);
                }
            }
        } catch (IOException e) {
            System.err.println("Грешка при читање од датотека.");
            e.printStackTrace();
            return null;
        }

        return matrix;
    }

    private static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            for (int element : row) {
                System.out.print(element + " ");
            }
            System.out.println();
        }
    }

    private static void transposeMatrix(int[][] matrix) {
        int n = matrix.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                int temp = matrix[i][j];
                matrix[i][j] = matrix[j][i];
                matrix[j][i] = temp;
            }
        }
    }

    private static int productOfMainDiagonal(int[][] matrix) {
        int product = 1;
        for (int i = 0; i < matrix.length; i++) {
            product *= matrix[i][i];
        }
        return product;
    }

    private static int productOfSecondaryDiagonal(int[][] matrix) {
        int product = 1;
        int n = matrix.length;
        for (int i = 0; i < n; i++) {
            product *= matrix[i][n - 1 - i];
        }
        return product;
    }

    private static void writeMatrixToFile(int[][] matrix, String filename) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(filename))) {
            for (int[] row : matrix) {
                for (int element : row) {
                    writer.write(element + " ");
                }
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Грешка при запишување во датотека.");
            e.printStackTrace();
        }
    }
}
